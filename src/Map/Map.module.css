.map {
  background-color: #10548c;
  font-family: var(--go-banana);
  height: calc(100vh - var(--header-height));
  height: calc(100dvh - var(--header-height));
}

.hidemarker {
  width: 0;
  height: 0;
  cursor: inherit;
}

.spoilerBeastie {
  filter: brightness(50%);
}

.textmarker {
  composes: boxHeaderBackground from global;
  white-space: nowrap;
  width: fit-content;
  height: fit-content;
  color: white;
  padding: 5px 10px 5px 10px;
  clip-path: polygon(0 0, calc(100% - 5px) 0, 100% 100%, 5px 100%);
  transform: translateX(-50%);
}

.bigtextmarker {
  composes: textmarker;
  font-size: 2em;
}

.imgmarker {
  width: 30px;
  height: 30px;
  border: solid white 3px;
  box-sizing: border-box;
  background-color: black;
  border-radius: 100%;
  transform: translateX(-9px);
}

.imgmarker img {
  margin: 10% 0 0 10%;
  width: 80%;
  height: 80%;
}

.itemHunted {
  z-index: 20000 !important;
  background-color: white;
  border-radius: 16px;
}

.itemList {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.item {
  display: flex;
  align-items: center;
}

.item > img {
  height: 40px;
}

.item > div {
  display: flex;
  flex-direction: column;
  text-align: center;
}

.specialBeastie {
  display: flex;
  align-items: center;
}

.specialBeastie > a > img {
  height: 80px;
}

.metamorph {
  display: flex;
  align-items: center;
  width: fit-content;
  margin: auto;
}

.metamorphColumn {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.metamorphColumn img {
  height: 40px;
}

.mapBg {
  z-index: -2 !important;
}

:global(.leaflet-image-layer:hover) {
  z-index: 20 !important;
  outline: white dashed 6px;
  box-sizing: content-box;
}

.bigLevel,
.bigLevel:hover {
  z-index: -2 !important;
}

.goBehind {
  z-index: -1 !important;
}

.levelSelected {
  z-index: 21 !important;
  outline: aqua dashed 6px !important;
  box-sizing: content-box;
}

.bigLevelSelected {
  z-index: -1 !important;
}

.insideOverlay {
  z-index: 22 !important;
}

@keyframes popupOpen {
  from {
    clip-path: polygon(0 0, 10px 100%, 10px 100%, 0 0);
  }

  to {
    clip-path: polygon(0 0, 10px 100%, 100% 100%, calc(100% - 10px) 0);
  }
}

:global(.leaflet-popup) {
  animation-name: popupOpen;
  animation-duration: 0.2s;
  transition: clip-path 0.2s !important;
  opacity: 1 !important;
  font-size: 1.15em;
  clip-path: polygon(0 0, 10px 100%, 100% 100%, calc(100% - 10px) 0);
}

:global(.noanim) :global(.leaflet-popup) {
  animation: none !important;
  transition: none !important;
}

:global(.leaflet-popup-content-wrapper) {
  background-image: repeating-linear-gradient(
    #ddd1bd,
    #ddd1bd 4px,
    #d5c9b5 4px,
    #d5c9b5 8px
  );
  animation-name: alt-bg-scroll;
  animation-duration: 2s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  border-radius: 0;
}

:global(.leaflet-popup-close-button) {
  margin-right: 10px;
  color: #111;
}

:global(.leaflet-popup-tip) {
  background-color: transparent;
}

:global(.leaflet-popup-closing) {
  /* not a regular leaflet thing but it's added in map onpopupclose event */
  clip-path: polygon(
    calc(100% - 10px) 0,
    100% 100%,
    100% 100%,
    calc(100% - 10px) 0
  );
}

.controlContainer {
  font-size: 1.2em;
  display: flex;
  flex-direction: column;
  align-items: end;
  user-select: none;
  pointer-events: none;
}

:global(.noanim) .controlContainer * {
  transition: none !important;
}

.controlSection {
  height: 100%;
  transition: height 0.5s;
}

.controlSection :global(.infoboxHeader) {
  transition:
    margin-left 0.525s,
    transform 0.5s;
  margin-left: 0%;
  transform: translateX(0%);
  cursor: pointer;
  pointer-events: auto;
}

.controlSectionClosed {
  composes: controlSection;
  height: 3em;
  filter: drop-shadow(white 0 0 2px);
  pointer-events: none;
}

.controlSectionClosed :global(.infoboxHeader) {
  margin-left: 100%;
  transform: translateX(-100%);
}

.controlSection :global(.infoBoxContent) {
  transition: clip-path 0.5s;
  pointer-events: auto;
}

.controlSectionClosed :global(.infoBoxContent) {
  clip-path: polygon(
    calc(100% - 4px) 0,
    calc(100% - 4px) 0,
    100% 100%,
    100% 100%
  );
  transition:
    clip-path 0.5s,
    display 1s;
}

.controlSectionChildren {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
}

.controlLayerCategory {
  cursor: pointer;
  font-size: 1.1em;
}

.itemSelect {
  display: flex;
  flex-wrap: wrap;
  align-content: start;
  width: calc(round(down, 90vw, 244px) + 10px);
  gap: 4px;
  padding: 4px;
}

.itemSelectItem {
  display: flex;
  width: 240px;
  min-height: 120px;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.3);
  color: white;
  text-decoration: none;
  cursor: pointer;
  justify-content: center;
  line-height: initial;
}

.itemSelectText {
  display: flex;
  flex-direction: column;
  text-align: center;
}

.itemSelectName {
  font-size: 1.2em;
  border-bottom: solid white 1px;
}

.itemSelectDesc {
  line-height: 1em;
}
